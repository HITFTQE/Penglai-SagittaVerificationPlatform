[GENERAL]
;=================================================================================================================================================================================================================================;当前回归通用配置，包括配置版本管理工具、版本链接，仿真路径，回归结果整理的excel路径及远端记录excel相关(TODO)
;工具配置选项包括如下:
;----tools：选择当前使用的版本管理工具，可选择选项为 git svn 除开这两个选项，配置其他选项均认为没有版本管理工具，直接在本地进行回归
;----operation：在当前版本管理工具下，选择回归前要对当前版本的操作，包括 clone(git)/co(svn) update none
;-------clone(git)/co(svn)：这一选项时，脚本会根据版本工具及路径配置(clone_workspace)，创建一个名为<年月日_时分秒>或者外部指定的文件夹，然后从url中clone/checkout对应的工程到文件夹内，在转到指定的路径(sim_path/sim---一定是sim目录下)进行回归仿真
;-------update：这一选项时，脚本会将本地代码从git/svn仓库下更新到最新版本后，转到指定的路径(sim_path/sim---一定是sim目录下)进行回归仿真
;-------none：这一选项时，工具不做任何版本处理，直接转到指定的路径(sim_path/sim---一定是sim目录下)进行回归仿真
;----url：配置当前本部管理工具的链接，对于git/svn工具，配置信息存在不一样：
;--------svn：直接指定svn仓库对应的url链接即可，例如：svn://9.30.4.36:3696/yaochi_frontend
;--------git：需要指定git仓库对应的url及当前的分支，可支持多个git仓库，格式为{"仓库1的url":"仓库1的分支","仓库2的url":"仓库2的分支",...}，例如{"http://git.code.oa.com/sharonsyu/V265_verification.git":"master","http://git.code.oa.com/sharonsyu/V265_rtl_model.git":"cm_multicore","http://git.code.oa.com/sharonsyu/V265_rtl.git":"rtl_multicore"}
;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>e.g.>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;tools = git
;operation = clone
;url = {"http://git.code.oa.com/sharonsyu/V265_verification.git":"master","http://git.code.oa.com/sharonsyu/V265_rtl_model.git":"cm_multicore","http://git.code.oa.com/sharonsyu/V265_rtl.git":"rtl_multicore"}
;=================================================================================================================================================================================================================================
tools = 
operation = 
url = 

;=================================================================================================================================================================================================================================
;回归路径选项包括：
;----clone_workspace：在操作选择clone(git)/co(svn)时，此配置才有效，为指定工程需要clone/checkout到对应的目录下，例如 /data/lhome/zifama/project/v265/regress/mdbt
;----sim_path：指定当前模块的仿真路径，同样只有在操作选择clone(git)/co(svn)才会生效，例如 V265_verification/bt/md_asic
;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>e.g.>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;clone_workspace = /data/lhome/zifama/project/v265/regress/mdbt
;sim_path = V265_verification/bt/md_asic
;=================================================================================================================================================================================================================================
clone_workspace = 
sim_path = 

;=================================================================================================================================================================================================================================
;回归报告选项包括:
;----module_name：指定当前模块在环境中的instance名称，用于检索覆盖率，注意，必须是instance名，例如: U_MD_TOP
;----excel_name：指定当前回归最终报告存放的excel名称，例如：regress_result
;----excel_path：指定当前回归最终excel报告存放路径，例如：/data/lhome/zifama/project/v265/regress
;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>e.g.>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;module_name = U_MD_TOP
;excel_name = md_regress_result
;excel_path = /data/lhome/zifama/project/v265/regress
;=================================================================================================================================================================================================================================
module_name = 
excel_name = 
excel_path = 

;====================================================================================paral_run_num================================================================================================================================
;anti_annotation_enable ： 是否进行反标 enable/disable，默认为关
;testpoint_file_name    :  进行反标的excel文件
;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>e.g.>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;anti_annotation_enable = enable
;testpoint_file_name = csv_testpoint_test.xlsx 
;=================================================================================================================================================================================================================================
anti_annotation_enable = disable
testpoint_file_name = 

;=================================================================================================================================================================================================================================
;sim_tools  仿真使用工具选项为vcs xrun 默认为vcs
;paral_run_num 指定在一次回归中同时并行执行的最大tc个数，例如：10
;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>e.g.>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;paral_run_num = 10
;sim_tools = vcs
;=================================================================================================================================================================================================================================
sim_tools = vcs
paral_run_num = 

;=================================================================================================================================================================================================================================
;回归错误重跑选项：
;----fail_recmp：错误重跑时是否重编译开关，具体配置选项为 disable enable
;----recmp_opts：错误重跑时重新编译需要添加的编译选项
;----fail_rerun：错误重跑开关是能，具体配置选项为 disable enable
;----rerun_opts：错误重跑时需要添加的仿真选项
;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>e.g.>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;fail_recmp = disable
;recmp_opts = 
;fail_rerun = enable
;rerun_opts = note=error wave=fsdb
;=================================================================================================================================================================================================================================
fail_recmp = disable
recmp_opts = 
fail_rerun = disable
rerun_opts = 

;=================================================================================================================================================================================================================================
;log扫描关键字添加，可添加log扫描时需要识别/忽略的 fatal/error/warning 关键字
;对于需要识别的关键字，脚本中有默认关键字如下
;ignore_warning_en: 是否识别log中的warning并报对应warning统计，enable为使能，disable为关闭warning关键字识别
;FatalKeyWordList = ["UVM_FATAL"]
;ErrorKeyWordList = ["UVM_ERROR","fail","failed","Error"]
;WarningKeyWordList = ["UVM_WARNING","warning"]
;=================================================================================================================================================================================================================================
;ignore_fatal_key_words: 当log行里面出现对应关键词组合的时候，不会统计到fatal里  
;ignore_error_key_words: 当log行里面出现对应关键词组合的时候，不会统计到error里  
;ignore_warning_key_words: 当log行里面出现对应关键词组合的时候，不会统计到warning里  
;total_ignore_log_list: 在识别log文件时，list中的log不纳入统计的log列表中,默认列表为
;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>e.g.>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;ignore_warning_en = disable
;fatal_key_words = []
;error_key_words = ['error']
;warning_key_words = []
;ignore_fatal_key_words = {}
;ignore_error_key_words = {'tc_error':['UVM_INFO','Command']}
;ignore_warning_key_words = {}
;total_ignore_log_list = ['vcs_compile_rtl.log','git.log','.*.log.swp','.*.log.swo']
;=================================================================================================================================================================================================================================
ignore_warning_en = disable
fatal_key_words = []
error_key_words = []
warning_key_words = []
ignore_fatal_key_words = {}
ignore_error_key_words = {}
ignore_warning_key_words = {}
total_ignore_log_list = []

;=================================================================================================================================================================================================================================
;start_chk_fatal_key_word: log从该关键词之后，开始检查fatal，如果没有填入，则表示从头开始检查，默认为空
;start_chk_error_key_word: log从该关键词之后，开始检查error，如果没有填入，则表示从头开始检查，默认为空
;start_chk_warning_key_word: log从该关键词之后，开始检查warning，如果没有填入，则表示从头开始检查，默认为空
;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>e.g.>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;start_chk_fatal_key_word = 
;start_chk_error_key_word = start reseting
;start_chk_warning_key_word = 
;=================================================================================================================================================================================================================================
start_chk_fatal_key_word = 
start_chk_error_key_word = 
start_chk_warning_key_word = 

;=================================================================================================================================================================================================================================
;generate daily 
;set_daily_regress: daily regress switch, enable/disable(default:disable)
;regress_date_hour: daily regress hour, when switch is enable, this setting is enable(default:0)
;regress_date_hour: daily regress minute, when switch is enable, this setting is enable(default:0)
;project_source_file: before daily regress, source profile(default: '')
;if you use this function, it will generate a Shell script(RegressCrontabScr.sh) on sim path and set crontab(Comment: daily_regress) to use this Shell script
;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>e.g.>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;set_daily_regress = enable
;regress_date_hour = 1
;regress_date_minute = 0
;project_source_file = source_me.cshrc
;=================================================================================================================================================================================================================================
set_daily_regress = disable
regress_date_hour = 1
regress_date_minute = 0
project_source_file = source_me.cshrc

[PRE_REGRESSION]
;=================================================================================================================================================================================================================================
;预/后执行的脚本/makefile 命令
;预/后执行脚本 仅支持执行一个脚本，如果有多个脚本要求整合为一个脚本后配置
;预/后执行makefile命令支持多个命令配置，命令之间通过分号(;)隔离开来，最后一个命令后面不能添加分号
;所有预/后执行的脚本/makefile 命令均有对应的配置使能，配置选项为 enable disable
;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>e.g.>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;pre_script_enable = enable 
;pre_make_enable = enable
;post_script_enable = disbale
;post_make_enable = disbale
;
;pre_script = /data/project/videocoding_dev/T265_HW/verification/bt/md/cfg/V265GenTxt.py /data/project/videocoding_dev/T265_HW/verification/bt/md/cfg/regress.ini
;pre_make = make abc;make cmodel
;post_script = 
;post_make = 
;
;=================================================================================================================================================================================================================================
pre_script_enable = disable 
pre_make_enable = disable
post_script_enable = disbale
post_make_enable = disbale

pre_script = 
pre_make = 
post_script = 
post_make = 

[REGRESSION]
;=================================================================================================================================================================================================================================
;配置回归结果写到远端机器excel选项：
;----dotransport：回归结果写到远端机器excel开关，可选配置为 enable disable
;----transport_while_regress: 在使用get_regr等回归中途获得结果的命令时，是否将结果发送到远端，可选配置为enable disable
;只有打开dotransport，transport_while_regress才有效
;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>e.g.>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;dotransport = disable
;transport_while_regress = disable
;=================================================================================================================================================================================================================================
dotransport = disable
transport_while_regress = disable

;=================================================================================================================================================================================================================================
;配置回归编译选项：
;----docompile：回归开始时是否执行vcs编译开关，可选配置为 enable disable
;----fcov：回归时是否打开功能覆盖率，此选项无论docompile=enable/disable 均起作用(需要对仿真run起作用)，可选配置为 on off
;----ccov：回归时是否打开代码覆盖率，此选项无论docompile=enable/disable 均起作用(需要对仿真run起作用)，可选配置为 on off
;----fcov_key_word : used for xrun fcov seed key word, default is "_common_pkg"
;----udf：回归编译时需要添加的编译选项，此配置无论docompile=enable/disable 均起作用(可能需要对仿真run起作用)
;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>e.g.>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;docompile = disable
;fcov = off
;ccov = off
;fcov_key_word = test_common_pkg
;udf = "+define+AAA"
;=================================================================================================================================================================================================================================
docompile = enable
fcov = on
ccov = on
fcov_key_word = 
udf = ""
cmp_opts = 

;=================================================================================================================================================================================================================================
;----dorotation: run tc with rotation(enable) or inorder(disable)
;----del_pass_log: 删除仿真通过的log，enable/disable 默认为enable
;----del_err_cov: 删除仿真没有通过的cov，enable/disable 默认为disable
;回归TClist选项：
;在tclist中，每个tc使用{}括起来，同时使用;隔开
;每个tc带有选项包括：
;----RUN_TIMES：指定当前tc需要执行次数，可不指定，默认为 1
;----MODE：指定当前tc在哪个模式下运行，可不指定，默认mode为base_fun
;----TC：指定当前tc的名称，必须指定
;----SEED：指定当前tc运行的随机种子，可配置为 rand [具体数值]，也可不配置，配置为rand时，由脚本自动随机seed值，配置为具体数值时，如果RUN_TIMES>1，则多次回归均指定同一个种子，不配置时，使用makefile内部默认种子，当前为 666666
;----TEST_OWNER：指定TC owner，可不指定
;----MAKE_OPTS：在''内部指定当前tc仿真时需要添加的命令
;当个tc可以在行最前面增加;进行注释屏蔽
;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>e.g.>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;tc_list = [
;        {'RUN_TIMES':10,'TC':'tc_sanity','MODE':'mode1','SEED':'rand','TEST_OWNER':'zifama','MAKE_OPTS':'udr="+frame_num=1 +sim_lcu_num=1"' };
;;       {'RUN_TIMES':100,'TC':'tc_full','SEED':'rand','TEST_OWNER':'mazifa','MAKE_OPTS':'' };
;        {'RUN_TIMES':1,'TC':'tc_directed','MODE':'mode2','SEED':'111','TEST_OWNER':'fazima','MAKE_OPTS':ftype=b fseq=seq24 fsize=392x248 fr=50 brate=400 rand_mode=0 keyint=4' };
;    ]
;=================================================================================================================================================================================================================================
dorotation = disable
del_pass_log = enable
del_err_cov = disable
tc_list = [
    ]

